{"tagline":"An example integrating stand-alone cells inside a celluloid actor.","body":"cell-celluloid\r\n==============\r\n\r\nAn example integrating stand-alone cells inside a celluloid actor.\r\n\r\n\r\n```\r\nrvm use 1.9.3\r\nbundle install\r\nbundle exec ruby main.rb\r\n```\r\n\r\n\r\n```\r\n\r\nrequire 'action_pack'\r\nrequire 'cell/base'\r\nrequire \"cell/rails/helper_api\"\r\nrequire 'celluloid'\r\n\r\n\r\n#define a cell that render an action get_time\r\nclass Render < ::Cell::Base\r\n\r\n  include Cell::Rails::HelperAPI\r\n\r\n  def get_time\r\n    @time=Time.new.to_s\r\n    render\r\n  end\r\n\r\nend\r\n\r\n#assign path for templates\r\nRender.append_view_path(\"./views\")\r\n\r\n# an actor that implements the message get_time\r\nclass Actor\r\n  \r\n  attr_accessor :render\r\n  include Celluloid\r\n  \r\n  def initialize\r\n    @render=Render.new\r\n  end\r\n\r\n  def get_time\r\n    render.render_state(:get_time)\r\n  end\r\nend\r\n\r\n#create a pool of 50 actors\r\npool = Actor.pool(size:50)\r\n\r\n#we do 100 rendering of cell Render sending 100 message to Actor and get the results of future\r\nlist_time=(0..100).to_a.map { |n| pool.future(:get_time) }.map {|actor| actor.value }\r\np list_time\r\n\r\n\r\n```","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Cell-celluloid"}